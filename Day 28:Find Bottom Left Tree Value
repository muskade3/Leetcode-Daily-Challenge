/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
static int maxdepth;
static int deepestnodevalue;
    public int findBottomLeftValue(TreeNode root) {
   maxdepth=-1;
 deepestnodevalue=0; 
helper(root,1);
return deepestnodevalue;
    }
    public static void helper(TreeNode root,int depth)
    {
        if(root==null)
        {
            return ;
        }
        if(depth>maxdepth)
        {
            maxdepth=depth;
           deepestnodevalue= root.val;
        }
        helper(root.left,depth+1);
        helper(root.right,depth+1);
    }
}
