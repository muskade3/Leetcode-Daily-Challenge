Ques:-
An integer has sequential digits if and only if each digit in the number is one more than the previous digit.

Return a sorted list of all the integers in the range [low, high] inclusive that have sequential digits.

 Example 1:

Input: low = 100, high = 300
Output: [123,234]

Example 2:

Input: low = 1000, high = 13000
Output: [1234,2345,3456,4567,5678,6789,12345]

Sol:-

//Approach 1:-
class Solution {
    public List<Integer> sequentialDigits(int low, int high) {
       List<Integer>ans=new ArrayList<>();
       for(int i=1;i<9;i++) 
       {
           int num=i;
           for(int j=i+1;j<=9;j++)
           {
               num=num*10+j;
               if(num>=low&&num<=high)
               {
                   ans.add(num);
               }
           }
       }
       Collections.sort(ans);
       return ans;
    }
}
//Approach-2:-
class Solution {
    public List<Integer> sequentialDigits(int low, int high) {
        List<Integer>ans=new ArrayList<>();
        Queue<Integer>q=new LinkedList<>();
        for(int i=1;i<=8;i++)
        {
            q.offer(i);
        }
        while(!q.isEmpty())
        {
            int temp=q.poll();
            if(temp>=low&&temp<=high)
            {
                ans.add(temp);
            }
            int last_digit=temp%10;
            if(last_digit+1 <=9)
            {
q.offer(temp*10+(last_digit+1));
            }

        }
        return ans;
    }
}


