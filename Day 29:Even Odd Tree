/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean isEvenOddTree(TreeNode root) {
        Queue<TreeNode> q= new LinkedList<TreeNode>();
        q.add(root);
        int level=0;
        int prev=Integer.MIN_VALUE;
        while(!q.isEmpty())
        {
            int len =q.size();
            for(int i=0;i<len;i++)
            {

                TreeNode temp=q.remove();
                int data=temp.val;
                if(level%2==0)
                {
                    if(data%2==1&& prev<data)
                    {
                        prev=data;
                    }else
                    {
                        return false;
                    }
                }else{
                    if(data%2==0&&prev>data)
                    {
                        prev=data;
                    }else
                    {
                        return false;
                    }
                }
                if(temp.left!=null)
                {
                    q.add(temp.left);

                }
                if(temp.right!=null)
                {
                    q.add(temp.right);
                    
                }
            }
            level++;
        if(level%2==1)
        {
            prev=Integer.MAX_VALUE;
        }else
        {
             prev=Integer.MIN_VALUE;
        }
        }
        return true;
        
    }
}
