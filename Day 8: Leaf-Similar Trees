Ques:-
Consider all the leaves of a binary tree, from left to right order, the values of those leaves form a leaf value sequence
Two binary trees are considered leaf-similar if their leaf value sequence is the same.
Return true if and only if the two given trees with head nodes root1 and root2 are leaf-similar.


Input: root1 = [3,5,1,6,2,9,8,null,null,7,4], root2 = [3,5,1,6,7,4,2,null,null,null,null,null,null,9,8]
Output: true

Input: root1 = [1,2,3], root2 = [1,3,2]
Output: false

Sol:-
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public static void helper(ArrayList<Integer> temp,TreeNode root)
    {
        if(root==null)
        {
            return ;
        }
        if(root.left==null&&root.right==null)
        {
            temp.add(root.val);
        }
        if(root.left!=null)
        {
            helper(temp,root.left);
        }
         if(root.right!=null)
        {
            helper(temp,root.right);
        }
    }

    public boolean leafSimilar(TreeNode root1, TreeNode root2) {
        ArrayList<Integer>l1=new ArrayList<>();
        ArrayList<Integer>l2=new ArrayList<>();
        helper(l1,root1);
        helper(l2,root2);
        if(l1.size()!=l2.size())
        {
            return false;
        }
        for(int i=0;i<l1.size();i++)
        {
            if(l1.get(i)!=l2.get(i))
            {
                return false;
            }
        }
        return true;
        
    }
}
